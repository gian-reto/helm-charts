---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rclone-hostpath.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "rclone-hostpath.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
{{ if .Values.replicaCount }}
  replicas: {{ .Values.replicaCount }}
{{ end }}
  selector:
    matchLabels:
      app: {{ include "rclone-hostpath.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "rclone-hostpath.fullname" . }}
        release: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
      - name: {{ include "rclone-hostpath.fullname" . }}-config
        image: "{{ .Values.images.initContainer.repository }}:{{ .Values.images.initContainer.tag }}"
        command: ["/bin/sh"]
        args:
          - -c
          - >-
              cp -v /in/rclone.conf /out/rclone.conf
        volumeMounts:
        - name: rclone-config
          mountPath: /in
          readOnly: true
        - name: config
          mountPath: /out
      # - name: {{ include "rclone-hostpath.fullname" . }}-clear
      #   image: "{{ .Values.images.initContainer.repository }}:{{ .Values.images.initContainer.tag }}"
      #   command:
      #     - rm
      #   args:
      #     - -rf
      #     - /data/*
      #   volumeMounts:
      #   - name: data
      #     mountPath: /data
      # - name: {{ include "rclone-hostpath.fullname" . }}-init
      #   image: "{{ .Values.images.initContainer.repository }}:{{ .Values.images.initContainer.tag }}"
      #   command: ["/bin/sh"]
      #   args:
      #     - -c
      #     - >-
      #         rm -rf /data/* &&
      #         chown -R 1000:1000 /data &&
      #         chown -R 1000:1000 /cache &&
      #         cp -v /in/rclone.conf /out/rclone.conf &&
      #         chown -R 1000:1000 /out &&
      #         chmod 766 /out/rclone.conf
      #   volumeMounts:
      #   - name: data
      #     mountPath: /data
      #   - name: cache
      #     mountPath: /cache
      #   - name: rclone-config
      #     mountPath: /in
      #     readOnly: true
      #   - name: config
      #     mountPath: /out
      #   securityContext:
      #     privileged: true
      terminationGracePeriodSeconds: 120
      containers:
      - name: {{ include "rclone-hostpath.fullname" . }}
        image: "{{ .Values.images.container.repository }}:{{ .Values.images.container.tag }}"
        args:
          - mount
          - "{{ .Values.rclone.remote }}"
          - "{{ .Values.rclone.path }}"
          - --config=/etc/rclone/rclone.conf
          - --cache-dir={{ .Values.rclone.cacheDir }}
          - --allow-non-empty
          - --allow-other
          - --umask=000
          - --gid=1000
          - --uid=1000
          - --dir-perms=0777
          - --file-perms=0666
        {{- range .Values.rclone.mountArgs }}
          - {{ . }}
        {{- end }}
        lifecycle:
          preStart:
            exec:
              command: ["/bin/sh","-c","chown -R 1000:1000 {{ .Values.rclone.cacheDir }}"]
          preStop:
            exec:
              command: ["/bin/sh","-c","fusermount -uz {{ .Values.rclone.path }}"]
        securityContext:
          privileged: true
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
          fsGroupChangePolicy: "OnRootMismatch"
          capabilities:
            add:
              - SYS_ADMIN
        resources:
{{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/rclone
        - name: cache
          mountPath: "{{ .Values.rclone.cacheDir }}"
        - name: data
          mountPath: "{{ .Values.rclone.path }}"
          mountPropagation: Bidirectional
        - mountPath: /dev/fuse
          name: dev-fuse
        - mountPath: /etc/fuse.conf
          name: fuse-conf
      volumes:
      - name: config
        emptyDir: {}
      - name: rclone-config
        secret:
          secretName: {{ .Values.rclone.configSecretName }}
          optional: false
      - name: cache
        hostPath:
          path: "{{ .Values.rclone.cacheDir }}"
          type: DirectoryOrCreate
      - name: data
        hostPath:
          path: "{{ .Values.rclone.path }}"
          type: DirectoryOrCreate
      - name: dev-fuse
        hostPath:
          path: /dev/fuse
      - name: fuse-conf
        hostPath:
          path: /etc/fuse.conf
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}